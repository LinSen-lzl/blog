export const themeData = JSON.parse("{\"logo\":\"/main.jpg\",\"lastUpdatedText\":\"更新时间\",\"contributorsText\":\"贡献者\",\"editLinkText\":\"编辑此文档\",\"docsRepo\":\"LinSen-lzl/blog\",\"docsDir\":\"docs\",\"docsBranch\":\"master\",\"navbar\":[{\"text\":\"主页\",\"link\":\"/\"},{\"text\":\"后端\",\"children\":[{\"text\":\"WebSocket\",\"link\":\"/backend/websocket/\"},{\"text\":\"Java多线程与线程池\",\"link\":\"/backend/javathread/\"},{\"text\":\"Java线程同步\",\"link\":\"/backend/threadsync/\"},{\"text\":\"Java锁\",\"link\":\"/backend/javalock/\"},{\"text\":\"MySQL\",\"link\":\"/backend/mysql/\"},{\"text\":\"Flowable工作流\",\"link\":\"/backend/flowable/\"},{\"text\":\"消息队列\",\"link\":\"/backend/mq\"},{\"text\":\"SpringCloud\",\"link\":\"/backend/springcloud/\"},{\"text\":\"JDK新特性\",\"link\":\"/backend/jdknewfeatures\"}]},{\"text\":\"算法\",\"children\":[{\"text\":\"算法思想\",\"link\":\"/algorithm/thinking/\"},{\"text\":\"算法题:动态规划\",\"link\":\"/algorithm/dp/\"},{\"text\":\"算法题:滑动窗口\",\"link\":\"/algorithm/sw/\"},{\"text\":\"算法题:分治\",\"link\":\"/algorithm/dac/\"}]},{\"text\":\"部署\",\"children\":[{\"text\":\"Docker\",\"link\":\"/deployment/docker/\"},{\"text\":\"Nginx\",\"link\":\"/deployment/nginx/\"}]},{\"text\":\"AI\",\"children\":[{\"text\":\"mcp协议\",\"link\":\"/ai/mcp/\"}]}],\"sidebar\":{\"/backend/websocket/\":[{\"text\":\"什么是WebSocket？\",\"link\":\"/backend/websocket/#什么是websocket\"},{\"text\":\"什么是实时通信\",\"link\":\"/backend/websocket/#什么是实时通信\"},{\"text\":\"在没有websocket之前的实时通信\",\"link\":\"/backend/websocket/#在没有websocket之前的实时通信\"},{\"text\":\"WebSocket的优势\",\"link\":\"/backend/websocket/#websocket的优势\"},{\"text\":\"WebSocket的心跳机制\",\"link\":\"/backend/websocket/#websocket的心跳机制\"},{\"text\":\"使用WebSocket实现实时通信示例\",\"link\":\"/backend/websocket/#使用websocket实现实时通信示例\",\"children\":[{\"text\":\"1.引入依赖\",\"link\":\"/backend/websocket/#_1-引入依赖\"},{\"text\":\"2.WebSocket配置类\",\"link\":\"/backend/websocket/#_2-websocket配置类\"},{\"text\":\"3.消息模板类\",\"link\":\"/backend/websocket/#_3-消息模板类\"},{\"text\":\"4.Controller\",\"link\":\"/backend/websocket/#_4-controller\"},{\"text\":\"5.前端页面(index.html)\",\"link\":\"/backend/websocket/#_5-前端页面-index-html\"},{\"text\":\"6.结果演示\",\"link\":\"/backend/websocket/#_6-结果演示\"}]}],\"/backend/javathread/\":[{\"text\":\"认识多线程\",\"link\":\"/backend/javathread/#认识多线程\",\"children\":[{\"text\":\"一、进程与线程\",\"link\":\"/backend/javathread/#一、进程与线程\"},{\"text\":\"二、并发与并行\",\"link\":\"/backend/javathread/#二、并发与并行\"},{\"text\":\"三、为什么要用多线程\",\"link\":\"/backend/javathread/#三、为什么要用多线程\"}]},{\"text\":\"Java多线程的基础实现\",\"link\":\"/backend/javathread/#java多线程的基础实现\",\"children\":[{\"text\":\"一、继承Thread类\",\"link\":\"/backend/javathread/#一、继承thread类\"},{\"text\":\"二、实现Runnable接口\",\"link\":\"/backend/javathread/#二、实现runnable接口\"},{\"text\":\"三、实现Callable接口\",\"link\":\"/backend/javathread/#三、实现callable接口\"}]},{\"text\":\"基础多线程的局限性\",\"link\":\"/backend/javathread/#基础多线程的局限性\"},{\"text\":\"线程池\",\"link\":\"/backend/javathread/#线程池\",\"children\":[{\"text\":\"一、基本概念\",\"link\":\"/backend/javathread/#一、基本概念\"},{\"text\":\"二、适用场景\",\"link\":\"/backend/javathread/#二、适用场景\"}]},{\"text\":\"ThreadPoolExecutor\",\"link\":\"/backend/javathread/#threadpoolexecutor\",\"children\":[{\"text\":\"一、构造函数与参数详解\",\"link\":\"/backend/javathread/#一、构造函数与参数详解\"},{\"text\":\"二、预定义线程池\",\"link\":\"/backend/javathread/#二、预定义线程池\"},{\"text\":\"三、ThreadPoolExecutor的参数配置建议\",\"link\":\"/backend/javathread/#三、threadpoolexecutor的参数配置建议\"},{\"text\":\"四、使用示例\",\"link\":\"/backend/javathread/#四、使用示例\"}]},{\"text\":\"ForkJoinPool\",\"link\":\"/backend/javathread/#forkjoinpool\",\"children\":[{\"text\":\"一、需求背景\",\"link\":\"/backend/javathread/#一、需求背景\"},{\"text\":\"二、简介\",\"link\":\"/backend/javathread/#二、简介\"},{\"text\":\"三、与ThreadPoolExecutor对比\",\"link\":\"/backend/javathread/#三、与threadpoolexecutor对比\"},{\"text\":\"四、并行流\",\"link\":\"/backend/javathread/#四、并行流\"},{\"text\":\"五、使用示例\",\"link\":\"/backend/javathread/#五、使用示例\"}]}],\"/backend/threadsync/\":[{\"text\":\"什么是线程同步\",\"link\":\"/backend/threadsync/#什么是线程同步\"},{\"text\":\"为什么需要线程同步\",\"link\":\"/backend/threadsync/#为什么需要线程同步\"},{\"text\":\"线程同步会遇到的问题\",\"link\":\"/backend/threadsync/#线程同步会遇到的问题\"},{\"text\":\"如何实现线程同步\",\"link\":\"/backend/threadsync/#如何实现线程同步\",\"children\":[{\"text\":\"一、synchronized关键字\",\"link\":\"/backend/threadsync/#一、synchronized关键字\"},{\"text\":\"二、ReentrantLock\",\"link\":\"/backend/threadsync/#二、reentrantlock\"},{\"text\":\"三、原子类（Atomic Classes）\",\"link\":\"/backend/threadsync/#三、原子类-atomic-classes\"},{\"text\":\"四、CountDownlatch\",\"link\":\"/backend/threadsync/#四、countdownlatch\"}]}],\"/backend/javalock\":[{\"text\":\"为什么要写这篇文章？\",\"link\":\"/backend/javalock/#为什么要写这篇文章\"},{\"text\":\"锁的分类维度\",\"link\":\"/backend/javalock/#锁的分类维度\"},{\"text\":\"按并发策略分类（悲观锁与乐观锁）\",\"link\":\"/backend/javalock/#按并发策略分类-悲观锁与乐观锁\"},{\"text\":\"按公平性分类（公平锁与非公平锁）\",\"link\":\"/backend/javalock/#按公平性分类-公平锁与非公平锁\"},{\"text\":\"按可重入性分类（可重入锁与不可重入锁）\",\"link\":\"/backend/javalock/#按可重入性分类-可重入锁与不可重入锁\"},{\"text\":\"按共享性分类（共享锁与排他锁）\",\"link\":\"/backend/javalock/#按共享性分类-共享锁与排他锁\"}],\"/backend/mysql\":[{\"text\":\"MySQL的存储引擎\",\"link\":\"/backend/mysql/#mysql的存储引擎\",\"children\":[{\"text\":\"一、什么是存储引擎\",\"link\":\"/backend/mysql/#一、什么是存储引擎\"},{\"text\":\"二、常用的存储引擎\",\"link\":\"/backend/mysql/#二、常用的存储引擎\"},{\"text\":\"三、总结\",\"link\":\"/backend/mysql/#三、总结\"}]}]},\"locales\":{\"/\":{\"selectLanguageName\":\"English\"}},\"colorMode\":\"auto\",\"colorModeSwitch\":true,\"repo\":null,\"selectLanguageText\":\"Languages\",\"selectLanguageAriaLabel\":\"Select language\",\"sidebarDepth\":2,\"editLink\":true,\"lastUpdated\":true,\"contributors\":true,\"notFound\":[\"There's nothing here.\",\"How did we get here?\",\"That's a Four-Oh-Four.\",\"Looks like we've got some broken links.\"],\"backToHome\":\"Take me home\",\"openInNewWindow\":\"open in new window\",\"toggleColorMode\":\"toggle color mode\",\"toggleSidebar\":\"toggle sidebar\"}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updateThemeData) {
    __VUE_HMR_RUNTIME__.updateThemeData(themeData)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ themeData }) => {
    __VUE_HMR_RUNTIME__.updateThemeData(themeData)
  })
}
